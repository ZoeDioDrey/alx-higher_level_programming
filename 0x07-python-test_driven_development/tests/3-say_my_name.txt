======================
3-say_my_name
======================

Say my name module is the unit test that verifies print of first and last name

=====================

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("John", "Smith")
    My name is John Smith

::

    >>> say_my_name("Walter", "White")
    My name is Walter White

It also works with only one name the next arg print empty string

::

    >>> say_my_name("Bob")
    My name is Bob

TypeError there is no string in the first name

::

    >>> say_my_name(12, "White")
    Traceback (most recent call last):
    TypeError: first_name must be a string

TypeError there is no string in the last name

::

    >>> say_my_name("White", 14)
    Traceback (most recent call last):
    TypeError: last_name must be a string

TypeError: adding another list, tuple or dict for either first or last name

::

    >>> say_my_name({"White: 3", "Walter: 0"}, 14)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("Edward", {"White: 3", "Walter: 0"})
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name({"White: 3", "Walter: 0"}, "Walter")
    Traceback (most recent call last):
    TypeError: first_name must be a string

TypeError: if there is no input

::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'

TypeError: if input is None

::

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::
